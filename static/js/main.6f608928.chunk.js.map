{"version":3,"sources":["img/profilepic.PNG","components/Navitem.js","components/Navbar.js","components/Social.js","contents/Home.js","contents/About.js","contents/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navitem","to","this","props","tolink","className","item","Component","Navbar","Social","class","href","target","size","Home","src","profilepic","alt","About","Contact","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,wC,mNCiB5BC,E,uKAXf,OACQ,6BACI,4BACZ,kBAAC,IAAD,CAAMC,GAAIC,KAAKC,MAAMC,OAAQC,UAAU,QAASH,KAAKC,MAAMG,Y,GALrCC,aCcHC,E,uKAZX,OACI,6BACA,4BACA,kBAAC,EAAD,CAASF,KAAK,OAAOF,OAAO,MAC5B,kBAAC,EAAD,CAASE,KAAK,QAAQF,OAAO,WAC7B,kBAAC,EAAD,CAASE,KAAK,UAAUF,OAAO,mB,GARtBG,a,yBCiBNE,E,uKAbf,OACA,yBAAKC,MAAM,UAEX,uBAAGC,KAAK,gCAAgCC,OAAO,UAAS,kBAAC,IAAD,CAAgBC,KAAM,MAC9E,uBAAGF,KAAK,gDAAgDC,OAAO,UAAS,kBAAC,IAAD,CAAmBC,KAAM,MACjG,uBAAGF,KAAK,4CAA4CC,OAAO,UAAS,kBAAC,IAAD,CAAkBC,KAAM,MAC5F,uBAAGF,KAAK,4DAA4DC,OAAO,UAAS,kBAAC,IAAD,CAAYC,KAAM,W,GARjFN,aCaNO,E,uKAXf,OACA,yBAAKT,UAAU,eACf,yBAAKU,IAAKC,IAAYC,IAAI,cAAcZ,UAAU,eAClD,wBAAIA,UAAU,QAAd,sBACA,kBAAC,EAAD,W,GANmBE,aCiBJW,E,uKAlBf,OACA,yBAAKb,UAAU,UACf,wBAAIA,UAAU,YAAd,YACA,0CACA,sDACA,sDACA,6BACA,yf,GAToBE,aCgBLY,E,uKAbf,OACA,yBAAKd,UAAU,UACf,wBAAIA,UAAU,YAAd,mBACA,wBAAIA,UAAU,YAAd,8CACA,wBAAIA,UAAU,YAAd,uCACA,6BACA,6BACA,wBAAIA,UAAU,YAAd,cACA,kBAAC,EAAD,W,GAVsBE,aCwBPa,MAlBf,WACA,OACA,kBAAC,IAAD,KACA,yBAAKf,UAAU,OACf,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,UCTkBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6f608928.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilepic.dc78b705.PNG\";","import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Navitem extends Component {\r\nrender() {\r\nreturn (\r\n        <div>\r\n            <li>\r\n<Link to={this.props.tolink} className=\"Link\" >{this.props.item}</Link>\r\n</li>\r\n</div>\r\n    \r\n\r\n)\r\n}\r\n}\r\nexport default Navitem","import React, { Component } from 'react';\nimport Navitem from './Navitem';\n\nclass Navbar extends Component {\n\n    render() {\n        return (\n            <nav>\n            <ul>\n            <Navitem item=\"Home\" tolink=\"/\" ></Navitem>\n            <Navitem item=\"About\" tolink=\"/about\"  ></Navitem>\n            <Navitem item=\"Contact\" tolink=\"/contact\"  ></Navitem>\n            </ul>\n            </nav>\n            )\n        }\n    }\n    \n    export default Navbar","import React, { Component } from 'react';\r\nimport {FaLinkedin ,FaFacebookSquare,FaInstagramSquare,FaGithubSquare } from \"react-icons/fa\";\r\n\r\n\r\n\r\nclass Social extends Component {\r\nrender(){\r\nreturn (\r\n<div class=\"social\">\r\n\r\n<a href=\"https://github.com/rakshit138\" target=\"_blank\"><FaGithubSquare size={30}/></a>\r\n<a href=\"https://www.instagram.com/rakshitkhandelwal_/\" target=\"_blank\"><FaInstagramSquare size={30}/></a>\r\n<a href=\"https://www.facebook.com/awestruckwall99/\" target=\"_blank\"><FaFacebookSquare size={30}/></a>\r\n<a href=\"https://www.linkedin.com/in/rakshit-khandelwal-503b071b2/\" target=\"_blank\"><FaLinkedin size={30}/></a>\r\n\r\n</div>\r\n\r\n)\r\n}\r\n}\r\nexport default Social","import React, { Component } from 'react';\r\nimport profilepic from '../img/profilepic.PNG';\r\nimport Social from '../components/Social';\r\n\r\n\r\nclass Home extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"condiv home\">\r\n<img src={profilepic} alt=\"Profile Pic\" className=\"profilepic\"></img>\r\n<h1 className=\"name\">Rakshit Khandelwal</h1>\r\n<Social/>\r\n\r\n</div>\r\n\r\n)\r\n}\r\n}\r\nexport default Home","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"condiv\">\r\n<h2 className=\"subtopic\">About Me</h2>\r\n<h3>Hey there,</h3>\r\n<h2>I'm Rakshit Khandelwal</h2>\r\n<h3>aspiring web developer</h3>\r\n<br></br>\r\n<p>I started my journey in the world of computers from an young age,\r\nnow Iâ€™m 20 years old, Pursuing my Computer and Communication Engineering Degree from\r\nMIT Manipal.  Web development is my center of interest, I always\r\nlove the idea of cross-platform development.Experienced Management Committee Member with a demonstrated \r\nhistory of working in the research industry. Skilled in C++, Engineering, Bootstrap, Cascading Style Sheets\r\n (CSS), and C (Programming Language).\r\n</p>\r\n</div>\r\n)\r\n}\r\n}\r\nexport default About","import React, { Component } from 'react';\r\nimport Social from '../components/Social';\r\n\r\nclass Contact extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"condiv\">\r\n<h1 className=\"subtopic\">Contact Me Here</h1>\r\n<h3 className=\"subtopic\">Email  :   rakshitkhandelwal1234@gmail.com</h3>\r\n<h3 className=\"subtopic\">Instagram   :   @rakshitkhandelwal_</h3>\r\n<br></br>\r\n<hr></hr>\r\n<h4 className=\"subtopic\">Follow me!</h4>\r\n<Social/>\r\n</div>\r\n)\r\n}\r\n}\r\nexport default Contact","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './contents/Home';\nimport About from './contents/About';\nimport Contact from './contents/Contact';\n\n\nfunction App() {\nreturn (\n<Router>\n<div className=\"App\">\n<Navbar />\n<Route exact path=\"/\">\n  <Home/>\n</Route>\n<Route path=\"/about\">\n  <About/>\n</Route>\n<Route path=\"/contact\">\n  <Contact/>\n</Route>\n</div>\n</Router>\n)\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}